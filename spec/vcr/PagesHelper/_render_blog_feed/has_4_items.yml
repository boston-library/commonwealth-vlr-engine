---
http_interactions:
- request:
    method: get
    uri: https://blog.digitalcommonwealth.org/?feed=rss2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 24 May 2024 16:50:14 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Last-Modified:
      - Wed, 14 Feb 2024 06:00:43 GMT
      Etag:
      - '"c8e07311886db1dbfe60751b4c15e4e1"'
      X-Powered-By:
      - W3 Total Cache/2.7.2
      Link:
      - <https://blog.digitalcommonwealth.org/index.php?rest_route=/>; rel="https://api.w.org/"
      Transfer-Encoding:
      - chunked
      Content-Type:
      - application/rss+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>News &amp; Announcements &#8211; Digital Commonwealth</title>
	<atom:link href="https://blog.digitalcommonwealth.org/?feed=rss2" rel="self" type="application/rss+xml" />
	<link>https://blog.digitalcommonwealth.org</link>
	<description></description>
	<lastBuildDate>Sat, 10 Feb 2024 19:21:04 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.3</generator>
	<item>
		<title>Valentines in the American Antiquarian Society&#8217;s Collection</title>
		<link>https://blog.digitalcommonwealth.org/?p=2995</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Wed, 14 Feb 2024 06:00:43 +0000</pubDate>
				<category><![CDATA[Features]]></category>
		<category><![CDATA[American Antiquarian Society]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2995</guid>

					<description><![CDATA[Valentines in the American Antiquarian Society’s Collection There are over 230 institutions that have contributed historical materials to Digital Commonwealth’s online collections. These institutions have selected materials that they have determined would be appropriate to enhance the whole of what is available on the Digital Commonwealth website. But in many cases, the collection or collections&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2995">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<figure id="attachment_3004" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Soldier-Valentine.jpg"><img fetchpriority="high" decoding="async" class="size-medium wp-image-3004" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Soldier-Valentine-300x224.jpg" alt="" width="300" height="224" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Soldier-Valentine-300x224.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Soldier-Valentine.jpg 432w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">Unknown, <a href="https://www.americanantiquarian.org/valentinesephemera/items/show/19">“Love Protects”</a>, American Antiquarian Society.</figcaption>
			</figure>
<p style="text-align: center;"><strong>Valentines in the American Antiquarian Society’s Collection</strong></p>
<p style="text-align: left;">There are over 230 institutions that have contributed historical materials to Digital Commonwealth’s online collections. These institutions have selected materials that they have determined would be appropriate to enhance the whole of what is available on the Digital Commonwealth website. But in many cases, the collection or collections that they have elected to share with Digital Commonwealth are only a taste of their entire holdings.</p>
<p style="text-align: left;">The <a href="https://www.digitalcommonwealth.org/institutions/commonwealth:z603vf97w">American Antiquarian Society</a> is a perfect example. “The AAS library today houses the largest and most accessible collection of books, pamphlets, broadsides, newspapers, periodicals, music, and graphic arts material printed through 1876 in what is now the United States, as well as manuscripts and a substantial collection of secondary texts, bibliographies, and digital resources and reference works related to all aspects of American history and culture before the twentieth century.” AAS selected 140 maps not duplicated in Boston Public Library’s Leventhal Map Center collection, out of their 10,000 maps, to be made available as a <a href="https://www.digitalcommonwealth.org/collections/commonwealth:z603vf985">Digital Commonwealth collection</a>.</p>
<p style="text-align: left;">That said, “the American Antiquarian Society has a collection of over 3,000 <a href="https://www.americanantiquarian.org/valentines">valentines</a> ranging in date from the 1830’s to 1900. The collection includes both manuscript and printed designs, with a strong representation of locally-produced cards made in Worcester.” AAS has created an online exhibition, <a href="https://www.americanantiquarian.org/Exhibitions/Valentines/">“Making Valentines: A Tradition in American.”</a>, providing an overview of their extensive collection. <a href="https://www.americanantiquarian.org/valentinesephemera/">“Victorian Valentines: Intimacy in the Industrial Age”,</a> a collaborative student project between AAS and the Smith College Department of Art, provides an additional opportunity to explore the collection.</p>
<p>Worcester was the home of two of the pioneers in the production of commercial valentine cards in the nineteenth century.</p>
<p><a href="https://pastispresent.org/2011/good-sources/%E2%80%9Cmother-of-the-valentine%E2%80%9D-esther-howland-worcester-and-the-american-valentine-industry/">Esther Howland</a> (1828-1904) was considered the “Mother of the Valentine.” Howland was a cousin of Emily Dickinson; she set up her business in a workroom in her family home. With the help of a number of local girls, her business thrived for 30 years, with sales of $75,000 per year.</p>
<figure id="attachment_2998" class="wp-caption thumbnail aligncenter" style="width: 213px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-scaled.jpg"><img decoding="async" class="size-medium wp-image-2998" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-213x300.jpg" alt="" width="213" height="300" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-213x300.jpg 213w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-726x1024.jpg 726w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-768x1083.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-1089x1536.jpg 1089w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-1452x2048.jpg 1452w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/True-Love-Howland-scaled.jpg 1815w" sizes="(max-width: 213px) 100vw, 213px" /></a>
				<figcaption class="wp-caption-text"><a href="https://pastispresent.org/wp-content/uploads/True-Love-Howland.jpg">“True Love”</a> with Piper. Worcester:Esther Howland, ca. 1860.</figcaption>
			</figure>
<p>Another Worcester native, <a href="https://www.americanantiquarian.org/Exhibitions/Valentines/whitney.htm">George Whitney</a> established a valentine manufacturing company that prospered from 1866 to 1942. It was considered one of the largest valentine publishers in this country, with offices in New York, Boston and Chicago.</p>
<figure id="attachment_2999" class="wp-caption thumbnail aligncenter" style="width: 208px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/George-Whitney-2.jpg"><img decoding="async" class="size-full wp-image-2999" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/George-Whitney-2.jpg" alt="" width="208" height="256" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.americanantiquarian.org/valentinesephemera/exhibits/show/time-is-money/item/52">Sentimental Lace Valentine Box Lid.</a> George C. Whitney (mfg)</figcaption>
			</figure>
<p>A portion of AAS’s valentine collection includes a sub-genre, the comic valentine, also known as the Vinegar Valentine. “In sharp contrast to the sweet and sentimental valentine, caricatures were often cruel and the humor venomous, expressing everything by love.” “Lyre (liar)” is an example of this kind of valentine.</p>
<figure id="attachment_3000" class="wp-caption thumbnail aligncenter" style="width: 233px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-scaled.jpeg"><img loading="lazy" decoding="async" class="size-medium wp-image-3000" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-233x300.jpeg" alt="" width="233" height="300" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-233x300.jpeg 233w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-795x1024.jpeg 795w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-768x989.jpeg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-1193x1536.jpeg 1193w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-1591x2048.jpeg 1591w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/532303_B03_F06_0002-scaled.jpeg 1988w" sizes="(max-width: 233px) 100vw, 233px" /></a>
				<figcaption class="wp-caption-text"><a href="https://gigi.mwa.org/imagearchive/fileName/532303_B03_F06_0002.TIF">Lyre (liar)</a> Nineteenth Century Comic Valentine</figcaption>
			</figure>
<p>By the end of the nineteenth century, the Boston lithograph firm, <a href="https://americanantiquarian.org/prang/">Louis Prang &amp; Company</a>, was also in the greeting card business. “Commissioning the country&#8217;s best illustrators and creating design competitions, Prang sold beautiful cards that were unmatched for years. He also created fun and interesting cards for almost every holiday of the year,” including Valentine cards.</p>
<figure id="attachment_3008" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Prang.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-3008" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Prang-300x217.jpg" alt="" width="300" height="217" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Prang-300x217.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2024/02/Prang.jpg 494w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.loc.gov/pictures/item/2005687692/">Advertisement for Prang’s Valentine Cards</a> Library of Congress Prints &amp; Photographs<br /><a href="https://catalog.mwa.org/vwebv/holdingsInfo?searchId=2206&amp;recCount=10&amp;recPointer=174&amp;bibId=547470">A Valentine</a>. L. Prang &amp; Co., lithographer, 1888.</figcaption>
			</figure>
<p>On this February 14, 2024, we wish you a Happy Valentine’s Day.</p>
<p>Barbara Schneider, Member, Digital Commonwealth Outreach Committee</p>
<p>All Images courtesy American Antiquarian Society, unless otherwise noted.</p>
<div class="mceTemp"></div>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>A Changing World: Photography by Verner Reed</title>
		<link>https://blog.digitalcommonwealth.org/?p=2966</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Mon, 18 Dec 2023 17:34:58 +0000</pubDate>
				<category><![CDATA[Spotlight on...]]></category>
		<category><![CDATA[Historic New England]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2966</guid>

					<description><![CDATA[Verner Reed and Historic New England In 2002, Verner and Deborah Reed gave Historic New England 26,000 negatives encompassing Reed’s work as a freelance photographer in the third quarter of the twentieth century. His photographs include “portraits, landscapes, and images capturing special moments and current events, document[ing] urban and rural life in New England from&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2966">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<figure id="attachment_2967" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/VR.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2967" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/VR-300x216.jpg" alt="" width="300" height="216" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/VR-300x216.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/VR.jpg 628w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">Verner Reed, <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:nv935z58s">Brunswick Hotel, 1957</a>.</figcaption>
			</figure>
<p><strong>Verner Reed and Historic New England</strong></p>
<p>In 2002, Verner and Deborah Reed gave Historic New England 26,000 negatives encompassing Reed’s work as a freelance photographer in the third quarter of the twentieth century. His photographs include “portraits, landscapes, and images capturing special moments and current events, document[ing] urban and rural life in New England from the 1950s to the ’80s.” This gift greatly expanded Historic New England’s mid-twentieth century’s photography collection.</p>
<p>In 2004, while Verner Reed was still alive, Historic New England mounted an exhibition, and published a catalog of the exhibition, entitled <a href="https://www.historicnewengland.org/visit/exhibitions/new-england-in-the-photographs-of-verner-reed-1950/"><em>A Changing World: New England in the Photographs of Verner Reed 1950-1972</em></a><em>.</em></p>
<p>By 2022, Historic New England was <a href="https://www.historicnewengland.org/celebrating-the-twentieth-anniversary-of-the-verner-reed-archives/">“Celebrating the twentieth anniversary of the Verner Reed Archives”</a>.</p>
<p><strong>Who was Verner Reed?</strong></p>
<p>The following short biography comes from an article by Nancy Wolfe Stead, “The Life and Times of Verner Zevola Reed III” in the <a href="https://issuu.com/stoweguideandmagazine/docs/stoguid_sf2021_issuu"><em>Stowe Guide and Magazine</em>, Summer/Fall 2021, p.86-92</a>. Nancy Stead knew Verner Reed personally during his years in Stowe, and recounts from memory numerous episodes of “mayhem, fun, and outlandish enterprise”.</p>
<p>Verner Reed, “furniture maker, sculptor, jeweler, and photographer, was born in 1923 in Denver. . . Verner’s early years were spent in New York, Boston, and Stowe, where his father had built Edson Hill Manor as a wedding present for his wife. Following World War II and a stint in the U.S. Army Air Corps in Burma, China, and India, he became a builder of fine, handcrafted furniture. Marketing his product introduced him to the camera, and photography quickly became his passion.</p>
<p>A chance meeting with a LIFE bureau chief at a 1953 rally in Boston before the impending execution of Julius and Ethel Rosenberg opened an immense new arena for Verner. He became a freelance photographer for LIFE and, as his skills and interests deepened, he added <em>Fortune</em>, <em>Paris Match</em>, <em>Time</em>, and regional publications such as <em>Vermont Life</em> and various newspapers to his roster. He always worked freelance, refusing to be tied down, and he chose his subjects, exploring and exalting in the streets, neighborhoods, celebrations, losses, and people of his world.”</p>
<p>For more biographical information, see <a href="https://www.vernerreed.com/biography">vernerreed.com/biography</a>.</p>
<p><strong>The images</strong></p>
<p>In <em>Brunswick Hotel</em>, the featured image at the top of the blog post, “Reed clearly relished the simple irony that emerges between the decorum maintained by the sitters and the decrepitude of their environs. Yet, his chosen moment reveals a final twist: these Bostonians recognize their situation; they celebrate long-standing traditions even as they acknowledge changing times.”*</p>
<p>Verner Reed’s work in photography is informed by his times and his surroundings, rooted in New England. It is also clear that he has taken to heart Henri Cartier-Bresson’s definition of photography written in the text accompanying the iconic work<em>, Images à la sauvette </em>/ <em>The Decisive Moment </em>(1952). “Photography is the simultaneous recognition, in a fraction of a second, of the significance of an event as well as of a precise organization of forms which give that event its proper expression.” **</p>
<p>Reed cultivated a photographer’s eye.  In <em>The Photographer’s Eye</em>, based on the Museum of Modern Art’s 1964 exhition showcasing the history of photography, John Szarkowki wrote, “Photography alludes to the past and the future only in so far as they exist in the presnt, the past through its surviving relics, the future through prophecy visible in the present.”*** Verner Reed was always conscious of this elusive aspect of time.</p>
<figure id="attachment_2970" class="wp-caption thumbnail aligncenter" style="width: 376px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Families.jpg"><img loading="lazy" decoding="async" class=" wp-image-2970" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Families-300x146.jpg" alt="" width="376" height="183" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Families-300x146.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Families.jpg 597w" sizes="(max-width: 376px) 100vw, 376px" /></a>
				<figcaption class="wp-caption-text">Verner Reed, <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:nv935z40b">Northern Vermont Family, 1960</a>.<br />Walker Evans, <a href="https://www.getty.edu/art/collection/object/1041R2">Sharecropper&#8217;s Family, Hale County, Alabama, 1935</a>.</figcaption>
			</figure>
<p>In 1960, Verner Reed stopped to take a picture of a family in their yard in Northern Vermont. According to the description accompanying the photograph in Historic New England’s collection, “they asked for a minute to tidy up. The mother did not feel that she had enough presentable clothes for all of her children, and made some of them stay indoors&#8211;they can just be seen looking out the window.” Twenty five years earlier, Walker Evans had taken a series of pictures of George Burroughs and his family during the Depression in Hale County Alabama. The similarity of these two images is remarkable.</p>
<figure id="attachment_2974" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Art-Critics.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2974" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Art-Critics-300x126.jpg" alt="" width="300" height="126" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Art-Critics-300x126.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Art-Critics.jpg 712w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">Verner Reed, <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:nv935z53d">Boston Arts Festival, 1954</a>.<br />Norman Rockwell, <a href="https://www.wikiart.org/en/norman-rockwell/art-critic">Art Critic, 1955</a>.</figcaption>
			</figure>
<p>Ever the alert street photographer, Reed captured an image of a man enthralled by the sculpted head of a woman at the Boston Arts Festival in 1954. A year later, Norman Rockwell painted what looks like this man’s twin brother in a similar quizzical state for the cover of the April 16 <em>Saturday Evening Post</em>. The resemblance might be a coincidence, but it serves to highlight that both artists are reaching for that “decisive moment”, in this case in two very different mediums. Reed’s work is more contemplative, not aiming only for a quick laugh.</p>
<figure id="attachment_2977" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Abstract-Expressionism.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2977" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Abstract-Expressionism-300x119.jpg" alt="" width="300" height="119" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Abstract-Expressionism-300x119.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2023/12/Abstract-Expressionism.jpg 683w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">Verner Reed, <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:nv935x52x">Tree Branches, Newport, R.I., 1951</a>.<br />Verner Reed, <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:nv935x54g">Soaped Window, Boston, 1953</a>.<br />Robert Motherwell, <a href="https://www.wikiart.org/en/robert-motherwell/untitled-1967">Untitled, 1967</a>.</figcaption>
			</figure>
<p><em>Tree Branches</em> and <em>Soaped Window</em>, both dated in the early 1950s, provide evidence that Reed was cognizant of what was going on in the art world outside of New England. Painters who came to be called Abstract Expressionists were creating a body of work that was shifting the focus of the art world from Paris to New York. The abstract nature of the patterns created in Verner Reed’s photographs echo Robert Motherwell’s ink, watercolor and pencil drawings in <a href="https://www.moma.org/collection/works/37696"><em>The Mexican Sketchbook</em></a> (1941) as well as Motherwell’s later starkly defined black and white paintings.</p>
<p><strong>Historic New England and Digital Commonwealth</strong></p>
<p><a href="https://www.historicnewengland.org/?s=mission">Historic New England’s mission</a> is to “save and share New England’s past to engage and inform present and future generations.” Like any similar institution, Historic New England’s job encompasses preservation and access. Reed’s gift of his 26,000 negatives gave Historic New England the opportunity to preserve and catalog the images, to mount a number of exhibitions, and to publish an exhibition catalog. Anyone with a Massachusetts public library card has access to the print edition of <em>A Changing World</em>, and can see Verner Reed’s photographs in print.</p>
<p>By comparison, <a href="https://digitalcommonwealth.wildapricot.org/Values-Statement">Digital Commonwealth</a>’s mission is to enhance access to cultural heritage materials held by Massachusetts libraries, museums, historical societies, and archives, a bigger piece of the pie. “Access to knowledge and information is core to the purpose and structure of the Digital Commonwealth.” Along with 1850 collections from 235 institutions, Digital Commonwealth provides online access to 89 images in Historic New England’s <a href="https://www.digitalcommonwealth.org/collections/commonwealth-oai:nv935j62w">Verner Reed Photographic Collection, 1950-1972</a>.</p>
<p>Barbara Schneider, Member, Digital Commonwealth Outreach Committee</p>
<p>Retired Head Law Librarian, Massachusetts Trial Court Law Libraries</p>
<p>*John R. Stomberg, Essay in <em>A Changing World: New England in the Photographs of Verner Reed 1950-1972</em>, Historic New England, 2004. p. 8.</p>
<p>**Henri Cartier-Bresson, <em>The mind’s eye: Writings on Photography and Photographers</em>, Aperture, 1999. p. 42.</p>
<p>***John Szarkowski, <em>The Photographer’s Eye</em>, Museum of Modern Art, 1966. p. 10.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Trusting the Land: Digital Commonwealth Explores New Land Research and Partnerships for K-12 Educators</title>
		<link>https://blog.digitalcommonwealth.org/?p=2954</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Thu, 29 Sep 2022 13:55:49 +0000</pubDate>
				<category><![CDATA[Features]]></category>
		<category><![CDATA[Community Preservation Act]]></category>
		<category><![CDATA[Historical maps]]></category>
		<category><![CDATA[K-12 Education]]></category>
		<category><![CDATA[Land History]]></category>
		<category><![CDATA[MA]]></category>
		<category><![CDATA[Mass Land Trusts]]></category>
		<category><![CDATA[The College of the Holy Cross]]></category>
		<category><![CDATA[Worcester]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2954</guid>

					<description><![CDATA[Pakachoag: Where the River Bends documents the history of Pakachoag Hill in current day Worcester By Maureen Mann Maureen Mann is a Digital Commonwealth Board Member,Digital Humanities Librarian and Civics Education Consultant Until legislators and school districts officially decide whether Massachusetts students will recognize Indigenous People’s Day, Columbus Day, or both, educators choosing either cultural&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2954">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[
<p><iframe loading="lazy" title="Pakachoag: Where the River Bends (Official Version)" width="770" height="433" src="https://www.youtube.com/embed/aJ1dmllDPnQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
<p><em>Pakachoag: Where the River Bends</em> documents the history of Pakachoag Hill in current day Worcester</p>
<h5>By Maureen Mann</h5>
<h5>Maureen Mann is a Digital Commonwealth Board Member,<br />Digital Humanities Librarian and Civics Education Consultant</h5>
<p><br />Until legislators and school districts officially decide whether Massachusetts students will recognize Indigenous People’s Day, Columbus Day, or both, educators choosing either cultural celebration do so at the risk of community push-back. <br /><br />Studying the land, however, offers a peaceful curriculum alternative, not to mention a solid fit with Massachusetts social studies standards and the “Changing Landscapes” theme from the <a href="https://www.educatingforamericandemocracy.org/the-roadmap/7themes/#our-changing-landscapes">Educating for American Democracy Roadmap</a>, a federally funded guide to civics inquiry released in 2021. <br /><br />Digital Commonwealth explored land histories in a recent virtual event “From Land Acknowledgement to Land Partnership: the making of Pakachoag: Where the River Bends.”<br /><br />The College of the Holy Cross funded a partnership of land researchers, media educators, and students to create a 45 minute documentary which tells the story of the land beneath their campus. The film is clear, well-researched, and suitable for young audiences.<br /><br />It “makes a meaningful resource for our community,” says Professor Sarah Luria, film director and English and Environmental studies professor at Holy Cross. “The fact is every community has the potential to tell a story that is land-centered.” Professor Luria believes connecting with “trustworthy” experts in the community is an important first step to telling successful land histories.<br /><br />Two of her trustworthy partners were Director of the Greater Worcester Land Trust, Colin Novick and Thomas Doughton of Nipmuc heritage and Senior Lecturer at Holy Cross Center for Interdisciplinary Studies. Both appear in the film walking historical sites side by side while sharing their specialized research which blends beautifully into a fuller history of Pakachoag Village and people of Nipmuc heritage living in central Massachusetts.<br /><br />“One of the ideas we are working with as we went through this whole project is the notion of erasure . . . which is this notion that magically all of the folks who previously lived here, disappeared one day,” says Novick, “in many cases part of that erasure is building over landscapes that actually are historically or culturally significant.”<br /><br />As a result of the 2020 film, the Greater Worcester Land Trust and the Quinsigamond Band of Nipmuc, an organization including those of Nipmuc heritage and supporters, partnered in application for a conservation partnership grant from the State of Massachusetts Executive Office of Energy and Environmental Affairs Division of Conservation Services to save one of the last parcels of Pakachoag Hill, the source of drinking water for the native community known as Pakachoag Spring. <br /><br />Educators might not be in a place to guide students to create a film or a new legal land agreement, but there are several digital resources to help educators connect students to their place in the world. <br /><br /><a href="https://massland.org/">MASSACHUSETTS LAND TRUST COALITION</a><br />The Massachusetts Land Trust Coalition website provides a map of all land trusts in the state. This resource gathers experts, runs virtual programs and sends a monthly newsletter with the latest on land conservation and preservation.<br /><br /><a href="https://www.communitypreservation.org/">THE COMMUNITY PRESERVATION ACT</a><br />The Community Preservation Act (CPA) is a state program designed to help encourage open space, historical preservation, affordable housing, and outdoor recreation. Cities and towns “adopt” the program through town meeting approval which translates into a ballot question at the next town election. Their GIS map shows which towns have adopted this smart growth program passed in 2000. Students will be curious to learn where their town stands in the adoption process.<br /><br /><a href="https://native-land.ca/about/our-team/">NATIVE LAND DIGITAL</a><br />This Application Programming Interface (API) project created by Victor Temprano documents original native homelands of tribal communities around the world. The resource provides an opportunity for Humanities and Technology educators to partner in explaining API code and data contribution.<br /><br />As more resources present themselves over time, land histories will improve. Colin Novick made a direct plea to the event’s audience of cultural archivists. <br /><br />“There is a lot of really great material that is currently hidden to the rest of the world which is in the private collections of individual towns. . . . The documents that you have, the books that you have that aren’t digitized usually have wonderful resources that [will provide] the rest of us a great expanded consciousness if we could eventually get that stuff shared out there.”<br /><br />The Digital Commonwealth no-cost digitization program provides important support to bring those resources to the greater community. The Boston Public Library is the worksite for digitization and the process begins with a simple <a href="https://docs.google.com/forms/d/e/1FAIpQLSfDmqaJlM5kNP05031pxRk516_VnovLkY9ag7jJ550wuTTgMQ/viewform">Digitization Request Form</a>.<br /><br />“There are no size limitations,” says Jake Sadow, Statewide Digitization Project Archivist, when it comes to map digitization capabilities, “they should be unrolled and flattened for a few weeks before they come. We can handle pretty much anything.”<br /><br />Curriculum coordinators can advocate for partnerships for land histories within their community by encouraging local historical societies and libraries to digitize materials, perhaps even offering a civics credit for students helping to ready materials for digitization.<br /><br /></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>DC3 Repository System: An Overview</title>
		<link>https://blog.digitalcommonwealth.org/?p=2949</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Tue, 12 Jul 2022 15:09:29 +0000</pubDate>
				<category><![CDATA[BPL partnership]]></category>
		<category><![CDATA[Repository updates]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2949</guid>

					<description><![CDATA[In order to better support the ever-growing collections of digitized content from Digital Commonwealth member institutions, developers in the Boston Public Library’s Digital Services team have been building the next generation of the library’s digital asset management system. This new system, built entirely on open-source software, uses cloud storage for file management, allowing the repository&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2949">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p style="font-weight: 400;">In order to better support the ever-growing collections of digitized content from Digital Commonwealth member institutions, developers in the Boston Public Library’s Digital Services team have been building the next generation of the library’s digital asset management system. This new system, built entirely on open-source software, uses cloud storage for file management, allowing the repository to potentially grow exponentially, without the constraints of locally-managed servers and storage devices.</p>
<p style="font-weight: 400;">This new system is a suite of applications, APIs, and services that are collectively known as “DC3,” since this is the third version of the asset management system used to support preservation and dissemination of digitized primary source materials. (Click <a href="https://blog.digitalcommonwealth.org/?p=32">here</a> for an overview of the previous version.)</p>
<p style="font-weight: 400;">The heart of the new system is an application called <a href="https://github.com/boston-library/curator">Curator</a>, which is responsible for managing all of the descriptive, administrative, and technical metadata for objects and files in the repository. Curator provides an application programming interface (API) to support ingesting new items into the repository or making changes to existing items. Backed by a relational database, the <a href="https://github.com/boston-library/curator/wiki/Data-model">Curator data model</a> supports a wide variety of content types, as well as rich descriptive metadata for ingested items conforming to the Digital Commonwealth metadata application profile, which is based on the <a href="http://www.loc.gov/standards/mods/">Metadata Object Description Schema (MODS)</a> created by the Library of Congress. This system provides improved data validation and authority control, making better use of controlled vocabularies and thesauri offered by the Library of Congress and the Getty Research Institute.</p>
<p style="font-weight: 400;">Curator interacts with a number of other applications in the DC3 ecosystem, including:</p>
<ul>
<li style="font-weight: 400;"><a href="https://github.com/boston-library/ark-manager">ARK Manager</a> &#8211; manages unique <a href="https://arks.org/">Archival Resource Key </a>identifiers and permalinks for repository items.</li>
<li style="font-weight: 400;">AVI Processor &#8211; analyzes ingested files to extract technical metadata and creates derivative files used for viewing and downloading.</li>
<li style="font-weight: 400;"><a href="https://github.com/boston-library/bpldc_authority_api">BPLDC Authority API</a> &#8211; supports querying a variety of controlled data sources (such as LC, Getty, and GeoNames) for descriptive metadata fields including subjects, locations, genres, languages, resource types, names, etc.</li>
<li style="font-weight: 400;"><a href="https://cantaloupe-project.github.io/">Canataloupe</a> &#8211; provides high-resolution images and deep zooming functionality for the DC user interface via the <a href="https://iiif.io/">IIIF Image API</a>.</li>
<li style="font-weight: 400;"><a href="https://solr.apache.org/">Solr</a> &#8211; supports indexing and retrieval of metadata and full-text content; powers the search features for the DC user interface.</li>
</ul>
<p style="font-weight: 400;">In addition to the increased capacity (and decreased maintenance) provided by moving storage infrastructure to the cloud, this system provides a number of advantages. The relational data model used by Curator supports the ability to make updates to existing metadata much more efficiently. By spreading functionality over a variety of applications, the system is more fault-tolerant overall, and components can be re-engineered without the need for a complete overhaul of the entire system. And because this system uses more widely-adopted technologies and components, it will be easier to maintain and on-board new developers in the future.</p>
<p style="font-weight: 400;">All components of the DC3 system are built on freely-available open-source software. ARK-manager, AVI Processor, and BPLDC Authority API are custom-built applications created and maintained by BPL Digital Services – like Curator, code for many of these projects is available on <a href="https://github.com/boston-library">GitHub</a>.</p>
<p style="font-weight: 400;">Please <a href="https://www.digitalcommonwealth.org/feedback">contact us</a> with any questions, comments, or concerns.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Celebrating Women’s Sports on the 50th Anniversary of Title IX</title>
		<link>https://blog.digitalcommonwealth.org/?p=2931</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Wed, 08 Jun 2022 13:52:02 +0000</pubDate>
				<category><![CDATA[A Closer Look]]></category>
		<category><![CDATA[American Archive of Public Broadcasting]]></category>
		<category><![CDATA[Springfield College]]></category>
		<category><![CDATA[UMass Amherst]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2931</guid>

					<description><![CDATA[More than a century ago, the first women’s collegiate basketball championship was played in Massachusetts between Smith College sophomores and freshman. “Smith March Madness 1892” is a 8:20 minute video about the game. Senda Berenson, known as the “Mother of Women’s Basketball” and Director of Physical Training at Smith, introduced the game of basketball, developed&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2931">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p><figure id="attachment_2933" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Basketball-at-Smith.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2933" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Basketball-at-Smith-300x172.jpg" alt="" width="300" height="172" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Basketball-at-Smith-300x172.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Basketball-at-Smith.jpg 628w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://commons.wikimedia.org/wiki/File:Smith-College-Class-1902-basketball-team.jpg">Smith College Class of 1902 Basketball Team</a> (C.1902), Wikimedia Commons.</figcaption>
			</figure></p>
<p>More than a century ago, the first women’s collegiate basketball championship was played in Massachusetts between Smith College sophomores and freshman<a href="https://www.smith.edu/video/smith-first-new-game-basketball">. “Smith March Madness 1892”</a> is a 8:20 minute video about the game. <a href="https://en.wikipedia.org/wiki/Senda_Berenson_Abbott">Senda Berenson</a>, known as the “Mother of Women’s Basketball” and Director of Physical Training at Smith, introduced the game of basketball, developed by James Naismith the year before, to her Smith students. “Major newspapers and magazines in the Northeast covered the championship game, and reporters equated the popularity of the event to the Harvard Yale men’s football game.”</p>
<p>Senda Berenson wrote an article entitled <a href="https://cdm16122.contentdm.oclc.org/digital/collection/p15370coll3/id/1047/rec/11">“Basket Ball for Women”</a> in the September 1894 issue of <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:qv33s815d"><em>Physical Education</em></a>, available courtesy of Springfield College, Babson Library, Archives and Special Collections.  She says, “The value of athletic sports for men is not questioned. It is a different matter, however, when we speak of athletics for women. Until very recent years, the so-called ideal woman was a small waisted, small footed, small brained damsel, who prided herself on her delicate health, who thought fainting interesting, and hysterics fascinating. Wider and more thorough knowledge has given us more wholesome and saner ideas.”</p>
<p>Digital Commonwealth and other archives and libraries have helped to preserve and provide access to documents, images, and audio and video files related to women in sports. One example is the <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:6w92br44j">audio file for a lecture</a> given at UMass in 1978 by Wilma Rudolph, bronze medalist in 1956 Olympics and three-time gold medalist in 1960. At the time of the lecture, she had just published her autobiography, <em>Wilma,</em> and hearing her story in her own voice is inspirational. In the audio file, she speaks of her upbringing as the 20th of 22 children in small-town Tennessee. As a child, the fastest woman in the world had survived pneumonia, scarlet fever, and polio, and wore a leg brace for much of her early life.</p>
<p>The challenges that Wilma Rudolph had to overcome were many. She graciously gave credit to the family members, friends, fellow athletes, and coaches who helped her along the way. As she tells her story, she says that there came a point when she had to have faith in herself in order to reach her full potential.</p>
<p><figure id="attachment_2934" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-scaled.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2934" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-300x285.jpg" alt="" width="300" height="285" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-300x285.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-1024x972.jpg 1024w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-768x729.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-1536x1458.jpg 1536w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Wilma_Rudolph-2048x1944.jpg 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://commons.wikimedia.org/wiki/File:Wilma_Rudolph.jpg">Wilma Rudolph at the finish line during 50 yard dash at track meet in Madison Square Garden</a> (1961), Wikimedia Commons.</figcaption>
			</figure></p>
<p>Wilma Rudolph was a world class athelete before Title IX was signed into law. She had to make her way on her own and with the support system that she was able to construct without the benefit of the law enshrining women’s rights.</p>
<p><a href="https://www.law.cornell.edu/wex/title_ix">Title IX</a> of the Education Amendments of 1972 (“Title IX”), signed into law on June 23, 1972, was designed to prohibit discrimination on the basis of sex in education programs and activities in all public and private elementary and secondary schools, school districts, colleges, and universities receiving any Federal funds .Title IX has broader implications than just creating a level playing field for women athletes. But in the years since the law was passed, untold opportunities have opened up for women in sports.</p>
<p><figure id="attachment_2939" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Touch-Points-in-History.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2939" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Touch-Points-in-History-300x195.jpg" alt="" width="300" height="195" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Touch-Points-in-History-300x195.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Touch-Points-in-History-768x498.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Touch-Points-in-History.jpg 820w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">Women’s Sport Foundation,<a href="https://www.womenssportsfoundation.org/wp-content/uploads/2020/01/Chasing-Equity-Executive-Summary.pdf"> “Chasing Equity: The Triumphs, Challenges, and Opportunities in Sports for Girls and Women”</a> (2020), p 13.</figcaption>
			</figure></p>
<p>The implementation of Title IX has had a rocky road. It was not clear in the original law exactly how educational institutions would balance spending for men’s and women’s athletic programs. Universities with men’s football and men’s basketball programs that were spending and generating vast sums of money felt threatened by the law. Digital Commonwealth provides a link to a 1979 <a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:v692tb69m">MacNeil/Lehrer Report on Title IX Women’s Sports</a>. In his introduction to the half hour video file, Robert MacNeil says “many people wonder whether glamorous, big-time, big-money college sports are threatened by the drive to give women an equal share in college athletics. Tonight, sex discrimination in sports, and the debate over a law called Title IX.”</p>
<p>Progress has not been easy. Digital Commonwealth and its member institutions will continue to provide access to documentation of the uphill battle for equity in sports for girls and women.</p>
<p>Barbara Schneider, Member Outreach and Education Committee</p>
<p><figure id="attachment_2937" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Womens-Cross-Country-Race-1995.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2937" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Womens-Cross-Country-Race-1995-300x216.jpg" alt="" width="300" height="216" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Womens-Cross-Country-Race-1995-300x216.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Womens-Cross-Country-Race-1995-768x553.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/06/Womens-Cross-Country-Race-1995.jpg 771w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:736669429">Women’s Cross Country Race (1995)</a><br />Courtesy of Springfield College, Babson Library, Archives and Special Collections.</figcaption>
			</figure></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Newspaper Digitization at Boston Public Library</title>
		<link>https://blog.digitalcommonwealth.org/?p=2905</link>
					<comments>https://blog.digitalcommonwealth.org/?p=2905#comments</comments>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Fri, 20 May 2022 11:02:04 +0000</pubDate>
				<category><![CDATA[BPL partnership]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2905</guid>

					<description><![CDATA[It will come as no surprise that there is widespread, urgent demand from institutions across the state to digitize historical newspapers, especially local titles that provide invaluable local coverage of daily history and titles with underrepresented perspectives and histories. There is an incredible amount of important material in need of access and preservation, and making&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2905">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p><figure id="attachment_2906" class="wp-caption thumbnail alignleft" style="width: 220px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_womans-era-cover-1.jpg"><img loading="lazy" decoding="async" class="wp-image-2906 size-medium" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_womans-era-cover-1-220x300.jpg" alt="Image of the front page of The Woman's Era newspaper, which includes a story on and photograph of abolitionist and suffragist Lucy Stone." width="220" height="300" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_womans-era-cover-1-220x300.jpg 220w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_womans-era-cover-1.jpg 587w" sizes="(max-width: 220px) 100vw, 220px" /></a>
				<figcaption class="wp-caption-text">The Woman&#8217;s Era, Vol. 1 No. 1, March 24, 1894</figcaption>
			</figure></p>
<p style="text-align: left;"><span style="font-weight: 400;">It will come as no surprise that there is widespread, urgent demand from institutions across the state to digitize historical newspapers, especially local titles that provide invaluable local coverage of daily history and titles with underrepresented perspectives and histories. There is an incredible amount of important material in need of access and preservation, and making these resources available will require a robust, sustained effort.</span></p>
<p style="text-align: left;"><span style="font-weight: 400;">The Digital Services team at BPL has been working on increasing capacity for newspaper digitization and dissemination; here’s an overview of recent efforts from the last year:</span></p>
<p style="text-align: left;"><b>Digitization at BPL</b></p>
<p style="text-align: left;"><span style="font-weight: 400;">The BPL obtained a Mekel Mach 5 high-capacity microfilm scanner in March 2021, but the pandemic resulted in a significant delay with scheduling the necessary setup and training needed for operation. Mekel’s imaging technicians were finally able to help get this machine up and running in the fall of 2021, which has since been used to digitize several short runs of historically significant newspapers, including </span><a href="https://www.digitalcommonwealth.org/collections/commonwealth:tb09mp36c"><i><span style="font-weight: 400;">The Woman’s Era</span></i></a> <span style="font-weight: 400;">and </span><a href="https://www.digitalcommonwealth.org/collections/commonwealth:td96nn912"><i><span style="font-weight: 400;">The Tocsin of Liberty</span></i></a><span style="font-weight: 400;">. The main current project, which is still ongoing, is scanning a major run of the </span><i><span style="font-weight: 400;">Lawrence Evening Tribune</span></i><span style="font-weight: 400;"> (1890-1929).</span></p>
<p><span style="font-weight: 400;">While the scanning work is proceeding well (over 96,000 pages to date), imaging is only the start of any newspaper digitization project – there is significant manual work needed to collate and group the scanned pages into issue-level folders, and to identify missing pages, duplicate pages, and other anomalies.</span></p>
<p><span style="font-weight: 400;">There are also technical steps involved in processing the scanned images to create derivative files (such as using optical character recognition to extract text and word-coordinate information to support full-text searching and highlighting keyword matches on the page image), as well as developing the pipelines, workflows, and scripts to ingest the content into the digital repository. The library hopes to make significant progress on these latter steps during the second half of 2022.</span></p>
<p><figure id="attachment_2916" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_search-inside.png"><img loading="lazy" decoding="async" class="wp-image-2916 size-medium" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_search-inside-300x133.png" alt="Screenshot of a search box field in the Digital Commonwealth repository, with the heading &quot;Search inside: The Tocsin of liberty&quot;" width="300" height="133" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_search-inside-300x133.png 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_search-inside-768x340.png 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_search-inside.png 855w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">&#8220;Search inside&#8221; view</figcaption>
			</figure></p>
<p><figure id="attachment_2915" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_keyword-highlighting.png"><img loading="lazy" decoding="async" class="wp-image-2915 size-medium" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_keyword-highlighting-300x277.png" alt="Screenshot of the word &quot;emancipated&quot; highlighted in the text of a newspaper article." width="300" height="277" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_keyword-highlighting-300x277.png 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_keyword-highlighting-768x709.png 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/05/newspaper-digitization-update-for-DC_2022-05_keyword-highlighting.png 907w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text">Keyword searching</figcaption>
			</figure></p>
<p><b>National Digital Newspaper Program (NDNP) Grant</b></p>
<p><span style="font-weight: 400;">Through the assistance of the Boston Public Library Fund (</span><a href="https://bplfund.org/"><span style="font-weight: 400;">https://bplfund.org/</span></a><span style="font-weight: 400;">), BPL was awarded a grant in September 2021 from the National Endowment for the Humanities to join the National Digital Newspaper Program (</span><a href="https://www.loc.gov/ndnp/"><span style="font-weight: 400;">https://www.loc.gov/ndnp/</span></a><span style="font-weight: 400;">), a long-running effort coordinated by the Library of Congress to build and maintain a free online digital library of historical newspapers from all U.S. states and territories. During the last few months, Digital Services staff has been working with an advisory committee of scholars and experts to identify significant newspapers from the library’s microfilm archives for inclusion in this national collection, which will then be digitized and made available via Chronicling America (</span><a href="http://chroniclingamerica.loc.gov/"><span style="font-weight: 400;">http://chroniclingamerica.loc.gov/</span></a><span style="font-weight: 400;">), which provides access to over 18 million pages from over 6,000 newspaper titles published from 1777 to 1963, and in Digital Commonwealth. The project, which will run until October 2023 and produce 100,000 pages of scanned newspaper content, is currently nearing the end of the title selection process, with imaging scheduled to contracted out to a digitization vendor in the fall of this year.</span></p>
<p><b>MyHeritage &amp; Boston Neighborhood Newspapers</b></p>
<p><span style="font-weight: 400;">In 2016 BPL established a partnership with MyHeritage to provide access to BPL-held microfilm for digitization and display on their online genealogy platform, with the condition that BPL will receive a copy of all digitized page images produced. To date, this partnership has resulted in the digitization of approximately 7.5 million pages from a wide variety of Massachusetts newspapers spanning the late 1700s to the mid 1900s. However, the deliverables include the image scans only, and not any of the derivative files required to support discovery and display in Digital Commonwealth (see the “Digitization at BPL” section above). Producing the necessary derivative files at this scale will require additional capacity and funding support.</span></p>
<p><span style="font-weight: 400;">To evaluate the logistics, costs, time, and effort needed to ingest the MyHeritage-digitized materials into Digital Commonwealth, BPL is currently undertaking a pilot project using a vendor specializing in newspaper digitization to process a subset of these titles, highlighting Boston’s neighborhood newspapers. The titles selected for this project span from the mid-1800s to mid-1900s, representing many newspapers that currently have limited online availability, including the </span><i><span style="font-weight: 400;">Roxbury Gazette</span></i><span style="font-weight: 400;">, </span><i><span style="font-weight: 400;">Hyde Park Times</span></i><span style="font-weight: 400;">, </span><i><span style="font-weight: 400;">East Boston Free Press</span></i><span style="font-weight: 400;">, </span><i><span style="font-weight: 400;">South Boston Gazette</span></i><span style="font-weight: 400;">, </span><i><span style="font-weight: 400;">Charlestown News</span></i><span style="font-weight: 400;">, and the </span><i><span style="font-weight: 400;">Dorchester Beacon</span></i><span style="font-weight: 400;">, to name just a few. This project will produce approximately 170,000 pages of content; processing is scheduled to be completed by the end of June, and the goal is to integrate this content into the repository ingest workflow in the latter half of the year.</span></p>
<p><b>Looking Forward</b></p>
<p><span style="font-weight: 400;">The projects described above will no doubt provide increased access to historical newspaper content, but to make a significant impact, these activities need to become part of a curated, sustainable program with dedicated funding, equipment, and staff. The BPL is committed to continuing participation in Library of Congress’s NDNP program, which can be renewed every two years. The Digital Services team is also actively investigating other ways to increase capacity, including grant programs, advocating for more funding from the state legislature, adding staff to help manage digitization projects, and providing guidance to institutions that want to take on their own digitization projects. As with all things Digital Commonwealth, collaboration will be key to success!</span></p>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.digitalcommonwealth.org/?feed=rss2&#038;p=2905</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Paul Revere’s Engraving</title>
		<link>https://blog.digitalcommonwealth.org/?p=2860</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Mon, 25 Apr 2022 15:21:34 +0000</pubDate>
				<category><![CDATA[A Closer Look]]></category>
		<category><![CDATA[American Antiquarian Society]]></category>
		<category><![CDATA[BPL]]></category>
		<category><![CDATA[Massachusetts Historical Society]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2860</guid>

					<description><![CDATA[Paul Revere’s engraving, “The Bloody Massacre,” is part of Boston Public Library’s “Colonial and Revolutionary Boston”, one of Digital Commonwealth’s “Collections of Distinction”. Scholars agree that Revere copied the arresting image in “The Bloody Massacre” from an engraving by Henry Pelham entitled “Fruits of Arbitrary Power, or the Bloody Massacre” (1770).  Pelham wrote to Paul&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2860">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p><figure id="attachment_2861" class="wp-caption thumbnail aligncenter" style="width: 306px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Bloody-Massacre.jpg"><img loading="lazy" decoding="async" class=" wp-image-2861" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Bloody-Massacre.jpg" alt="" width="306" height="360" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Bloody-Massacre.jpg 721w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Bloody-Massacre-255x300.jpg 255w" sizes="(max-width: 306px) 100vw, 306px" /></a>
				<figcaption class="wp-caption-text">Paul Revere, <a href="https://www.digitalcommonwealth.org/search/commonwealth:vh53x3780">“The bloody massacre perpetrated in King-Street Boston : on March 5th 1770 by a party of the 29th regt.”</a>(1770), Boston Public Library, Rare Books Department.</figcaption>
			</figure></p>
<p>Paul Revere’s engraving, “The Bloody Massacre,” is part of Boston Public Library’s “<a href="https://www.digitalcommonwealth.org/collections/commonwealth:ng452114m">Colonial and Revolutionary Boston</a>”, one of Digital Commonwealth’s “Collections of Distinction”.</p>
<p>Scholars agree that Revere copied the arresting image in “The Bloody Massacre” from an engraving by Henry Pelham entitled <a href="https://www.americanantiquarian.org/Inventories/Revere/b7.htm">“Fruits of Arbitrary Power, or the Bloody Massacre”</a> (1770).  Pelham wrote to Paul Revere complaining about the theft of his intellectual property. “If you are insensible of the Dishonour you have brought on yourself by this Act, the World will not be so.” <a href="https://www.americanantiquarian.org/Inventories/Revere/bostonmassacre.pdf">(Clarence Brigham, “Boston Massacre, 1770, ”</a> <em>Paul Revere’s Engravings </em>(Worcester: American Antiquarian Society, 1954) ) .</p>
<p>While Henry Pelham may have felt that Paul Revere would be chastened for his appropriation of another man’s work, the world felt otherwise. “Certain it is that Revere was an outstanding patriot and saw the opportunity of furthering the patriot cause by circulating so significant a print.”(Brigham, p. 56).</p>
<p>Pelham, the artist who first rendered the image, was a Loyalist. In a letter to his sister-in-law, Susanna, the wife of John Singleton Copley, he wrote “Now we see this Country arming themselves and unsupported by any foreign Power ungenerously Waging War against their great Benefactors, and endeavouring to Ruin that State to whom they owe their being. . . “ ( <a href="https://library.si.edu/digital-library/book/letterspapersofj00copl"><em>Letters and Papers of John Singleton Copley and Henry Pelham, 1739-1776</em></a> , Massachusetts Historical Society, 1914, p. 344)  The Copleys had left Boston for England in 1774, and Henry would follow them in 1776.</p>
<p><figure id="attachment_2862" class="wp-caption thumbnail aligncenter" style="width: 346px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Goya.jpg"><img loading="lazy" decoding="async" class="size-full wp-image-2862" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Goya.jpg" alt="" width="346" height="266" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Goya.jpg 346w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Goya-300x231.jpg 300w" sizes="(max-width: 346px) 100vw, 346px" /></a>
				<figcaption class="wp-caption-text">Francisco de Goya y Lucientes, <a href="https://www.museodelprado.es/en/the-collection/art-work/the-3rd-of-may-1808-in-madrid-or-the-executions/5e177409-2993-4240-97fb-847a02c6496c">“The 3rd of May 1808 in Madrid, or ‘The Executions’”</a> (1814), Museo del Prado, Madrid.</figcaption>
			</figure></p>
<p><strong>Call to Arms or Lamentation?</strong></p>
<p>On the one year anniversary of the Boston Massacre, Paul Revere put together a striking exhibit in the windows of his home, displaying work depicting the “Tyranny of the British Administration of Government.” “The Bloody Massacre” was included in the illuminated display. The <a href="https://www.paulreverehouse.org/newspaper/"><em>Boston Gazette</em> reported</a> that “the Spectators, which amounted to many Thousands, were struck with solemn Silence, and their Countenances covered with a melancholy Gloom.”</p>
<p>Goya’s monumental work, “The 3<sup>rd</sup> of May 1808” has been compared with Paul Revere’s engraving. While the scale of the works is very different, the subject matter and the composition are very similar. The 82 prints in Goya’s series, <em>Los desastres de la Guerra</em> (The Disasters of W<em>a</em>r), published 35 years after Goya’s death, argue that Goya was painting about the horrors of war, not trying to create propaganda. Paul Revere’s engraving poses more of a question, asking his fellow citizens to respond. “The prints were intended as propaganda. . . “( <a href="https://www.americanantiquarian.org/beyondmidnight/exhibits/show/exhibition/revrevere">Beyond Midnight: Paul Revere</a>, American Antiquarian Society online resource, 2020).</p>
<p><strong>Say Their Names, compassion for the victims</strong></p>
<p>Samuel Gray. Samuel Maverick. James Caldwell. Crispus Attucks. These men were victims of members of a British regiment on King Street in Boston on March 5, 1770. James Caldwell and Crispus Attucks had no family or home in Boston, and Samuel Adams organized a procession to transport their caskets to Faneuil Hall, where they lay in state for three days before their public funeral. The people of Boston held a funeral procession for all of the victims, and they were buried in Boston in the Granary Burying Ground.</p>
<p>Crispus Attucks was a sailor of mixed African and Indigenous ancestry. The significance of his death has been a matter of debate for the last 250 years, argued in three different intertwining threads:</p>
<ol>
<li>He was the leader of a mob. This was John Adams’s argument in a Courtroom in 1770 when he defended William Wemms and seven other British soldiers. Adams described Attucks as “a stout Molatto fellow, whose very looks, was enough to terrify an person” (<a href="https://www.masshist.org/publications/adams-papers/index.php/view/ADMS-05-03-02-0001-0004-0016#sn=0">Adams Papers, Digital Edition, volume 3</a>, p. 269, Historical Society) . This was also the (unsuccessful) position of the Massachusetts Historical Society when they opposed a monument to Attucks on the Boston Common in 1887 (Proceedings of the Massachusetts Historical Society, Second Series, Vol. 3, [Vol. 23 of continuous numbering] (1886 &#8211; 1887), pp. 313-318).</li>
<li>He was an African American hero who should be acknowledged and memorialized. This was William C. Nell’s argument when he advocated for an annual celebration of Crispus Attucks Day on March 5 and wrote <em>The Colored Patriots of the American Revolution</em> in the 1850s.</li>
<li>He was an American hero. John Boyle O’Reilly’s poem at the 1888 <a href="https://archive.org/details/memorialofcrispu00bost_0">dedication of the memorial on the Boston Common</a> (p.56) captures the idea that Crispus Attucks represented all Americans:</li>
</ol>
<p><span style="text-align: center;">“And so must we come to the learning of Boston’s lesson to-day                                                                                                                                                                                            </span></p>
<p><span style="text-align: center;">The moral that Crispus Attucks taught in the old heroic way,                                                                                                                                                                                                                                            </span></p>
<p><span style="text-align: center;">God made mankind to be one in blood, as one in spirit and thought. . . “</span></p>
<p><figure id="attachment_2865" class="wp-caption thumbnail aligncenter" style="width: 246px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Revere2.jpg"><img loading="lazy" decoding="async" class="size-full wp-image-2865" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Revere2.jpg" alt="" width="246" height="372" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Revere2.jpg 246w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/Revere2-198x300.jpg 198w" sizes="(max-width: 246px) 100vw, 246px" /></a>
				<figcaption class="wp-caption-text">Paul Revere, engraver,<a href="https://www.americanantiquarian.org/Inventories/Revere/newspapers.htm"> [Four coffins of men killed in the Boston Massacre]</a> (1770), Revere Collection, American Antiquarian Society.</figcaption>
			</figure>“Digital Commonwealth provides support for the creation, management, and dissemination of cultural heritage materials held by Massachusetts libraries, museums, historical societies, and archives.”</p>
<p>from the Digital Commonwealth Statement of Values, Adopted by the Board on October 19, 2021.</p>
<p>“The study of history can be an effective tool against racism and can support better understanding of the experience of Black people. However, archives are not neutral; they are created by people and reflect the power structures that those people are influenced by and participate in. We must choose what our non-neutrality means. In this moment, we specifically affirm that Black lives matter and that we support efforts to dismantle oppression and injustice.”</p>
<p>from Statement from Digital Commonwealth Board on Black Lives Matter, Adopted by the Board on June 16, 2020<em>.</em></p>
<p>Barbara Schneider, Member Outreach and Education Committee</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Focus on Orra White Hitchcock, “An Amherst Woman of Art and Science”</title>
		<link>https://blog.digitalcommonwealth.org/?p=2834</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Wed, 02 Mar 2022 09:00:29 +0000</pubDate>
				<category><![CDATA[A Closer Look]]></category>
		<category><![CDATA[Amherst College]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2834</guid>

					<description><![CDATA[“The wife of Edward Hitchcock ( (1796–1864)  geologist, theologian, professor and for a decade president of Amherst College), Orra White Hitchcock  produced dozens of striking watercolors of native plants, picturesque lithographs of the Connecticut and Deerfield rivers, symbolic compositions and drawings of prehistoric fossils as well as large, colorful geological designs for her husband’s lectures.&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2834">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<div class="mceTemp"></div>
<p><figure id="attachment_2835" class="wp-caption thumbnail aligncenter" style="width: 221px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-scaled.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2835" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-221x300.jpg" alt="" width="221" height="300" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-221x300.jpg 221w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-756x1024.jpg 756w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-768x1041.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-1134x1536.jpg 1134w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-1511x2048.jpg 1511w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19719-scaled.jpg 1889w" sizes="(max-width: 221px) 100vw, 221px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:vm4182950">Drawing of octopus devouring a ship</a> [ca. 1828-1840]<br />Amherst College Archives &amp; Special Collections, Amherst, MA</figcaption>
			</figure>“The wife of Edward Hitchcock ( (1796–1864)  geologist, theologian, professor and for a decade president of Amherst College), Orra White Hitchcock  produced dozens of striking watercolors of native plants, picturesque lithographs of the Connecticut and Deerfield rivers, symbolic compositions and drawings of prehistoric fossils as well as large, colorful geological designs for her husband’s lectures. Self-taught, she rose to become the principal female illustrator of her generation in the United States.&#8221;</p>
<p>From <a href="https://www.amherst.edu/museums/mead/exhibitions/2011exhib/owh">Orra White Hitchcock (1796–1863): An Amherst Woman of Art and Science</a> , the title of a 2011 exhibition at Mead Art Gallery at Amherst College and a exhibition catalogue by Robert L. Herbert and Daria D’Arienzo. Thumbnails of the art work in the exhibition are available online in an  <a href="https://www.amherst.edu/museums/mead/exhibitions/2011exhib/owh/OWHcklst">Orra White Hitchcock Checklist</a>; the images show the range of her work. Hitchcock’s watercolors of native plants deserve particular note. Between 1817 and 1821, she created <a href="https://deerfield.edu/about/archives/galleries"><em>Herberium Parvum Pictum</em></a>, a 64 page album of watercolors depicting approximately 175 flower and grass specimens from her husband’s native plant collection.</p>
<p><figure id="attachment_2836" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/autumnal_scenery_e488860588.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2836" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/autumnal_scenery_e488860588-300x197.jpg" alt="" width="300" height="197" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/autumnal_scenery_e488860588-300x197.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/autumnal_scenery_e488860588-768x504.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/autumnal_scenery_e488860588.jpg 800w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:pr76g3500">Autumnal Scenery , View in Amherst</a><br />Hand-colored lithograph created from the original painting by Orra White Hitchcock (1833)<br />Jones Library, Amherst, Special Collections</figcaption>
			</figure></p>
<p>“In 1830, Edward [Hitchcock] was appointed state geologist for Massachusetts and over the next two years, Orra prepared drawings for the lithographs for his massive <em>Report on the Geology, Mineralogy, Botany, and Zoology of Massachusetts</em>, published by the Commonwealth in 1833.”</p>
<p>From <em>Orra White Hitchcock (1796–1863): An Amherst Woman of Art and Science </em>by Robert L. Herbert and Daria D’Arienzo, distributed by University Press of New England, p. 31.</p>
<p><a href="https://www.digitalcommonwealth.org/collections/commonwealth-oai:vm418289v">“Orra White Hitchcock Classroom Drawings”</a> is a Digital Commonwealth Collection consisting of 61 drawings by Orra White Hitchcock, made for use in her husband’s geology and natural history classes at Amherst College.</p>
<p><figure id="attachment_2837" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-scaled.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2837" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-300x194.jpg" alt="" width="300" height="194" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-300x194.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-1024x662.jpg 1024w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-768x497.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-1536x994.jpg 1536w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-20044-2048x1325.jpg 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:vm4183361">Orra White Hictchcock drawing of woolly mammoth skeleton</a> [ca. 1828-1840]<br />Amherst College Archives &amp; Special Collections, Amherst, MA</figcaption>
			</figure> “Given the obvious compatibility – indeed, synergy – between art and science, it is puzzling that the two fields have been perceived over the centuries as polarized. Fortunately, this divide is beginning to narrow. Journals as prestigious as <em>Nature</em> now carry regular reviews of art exhibits with relevance to science, for example. Orra White Hitchcock was one of a handful of plucky and observant women in her time whom we know bridged science and art. She can continue to provide inspiration for creative people, unencumbered by traditional roles, who want to celebrate the natural world – and all the wondrous discoveries still to be made.”</p>
<p>Elizabeth Farnsworth, “A Scientific Illustrator Looks Back at Orra White Hitchcock” in <em>Orra White Hitchcock (1796–1863): An Amherst Woman of Art and Science, </em>pp. 47-48.</p>
<p><figure id="attachment_2838" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-scaled.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2838" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-300x134.jpg" alt="" width="300" height="134" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-300x134.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-1024x459.jpg 1024w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-768x344.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-1536x688.jpg 1536w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/03/asc-19936-2048x918.jpg 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.digitalcommonwealth.org/search/commonwealth-oai:vm418319c">Orra White Hitchcock drawing of valleys</a> [ca. 1828-1840] Amherst College Archives &amp; Special Collections, Amherst, MA</figcaption>
			</figure>Through collaboration with institutions like Amherst College and the Jones Library (Amherst), Digital Commonwealth brings together curated collections of materials in a wide variety of formats. Digital Commonwealth (DC) provides a single online point of access for collections from over 200 member institutions.  DC is the host for Amherst College Archives &amp; Special Collections’ “Orra White Hitchcock Classroom Drawings” .  <a href="https://www.digitalcommonwealth.org/collections">Over fifteen hundred collections</a> can be searched online on the DC website.</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Pictorial Maps of Love and Marriage on Valentine’s Day</title>
		<link>https://blog.digitalcommonwealth.org/?p=2819</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Mon, 14 Feb 2022 10:00:30 +0000</pubDate>
				<category><![CDATA[A Closer Look]]></category>
		<category><![CDATA[BPL]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2819</guid>

					<description><![CDATA[&#160; Pictorial maps are a genre within the larger field of cartography that present a geographical area embellished with illustrations related to the places shown. The actual locations shown may be imaginary lands, and the pictures could be of people, buildings, historical events, or modes of transportation. The maps might contain humorous or whimsical touches,&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2819">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p style="text-align: center;">
<p><figure id="attachment_2820" class="wp-caption thumbnail aligncenter" style="width: 442px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Loveland.jpg"><img loading="lazy" decoding="async" class=" wp-image-2820" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Loveland-300x206.jpg" alt="" width="442" height="303" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Loveland-300x206.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Loveland-1024x704.jpg 1024w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Loveland-768x528.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Loveland.jpg 1164w" sizes="(max-width: 442px) 100vw, 442px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.digitalcommonwealth.org/search/commonwealth:st74cw28p">“A Pictorial Map of Loveland”</a> by Ernest Dudley Chase, [ca. 1943], Boston Public Library, Norman B. Leventhal Map Center.</figcaption>
			</figure>&nbsp;</p>
<p><strong>Pictorial maps</strong> are a genre within the larger field of cartography that present a geographical area embellished with illustrations related to the places shown. The actual locations shown may be imaginary lands, and the pictures could be of people, buildings, historical events, or modes of transportation. The maps might contain humorous or whimsical touches, and they inevitably reflect the values of the time in which they are made. Pictorial maps with themes of love and marriage have been created since the 18<sup>th</sup> century. On this Valentine’s Day, we can take a look at some of these maps.</p>
<p>“From the 18th century onward, when the commercial print industry started to get involved in the celebration of the Feast of Saint Valentine, maps with themes of matrimony and love became popular. Printed in 1777 by Breitkopf in Leipzig, Germany, the map below situates <em>Das Reich der Liebe</em> (The Kingdom of Love) amid the &#8220;Land of the Happy,&#8221; the &#8220;Land of Lust,&#8221; the &#8220;Land of Youth,&#8221; and, alas, also the lands of &#8220;Mourning Love&#8221; and &#8220;Fixed Ideas.&#8221;&#8221;</p>
<p>Nancy Rosin, <a href="https://www.metmuseum.org/blogs/collection-insights/2018/box-filled-with-love-historic-valentines">“Unpacking A Box of Love,”</a> February 13, 2018, The Metropolitan Museum of Art.</p>
<p><figure id="attachment_2821" class="wp-caption thumbnail aligncenter" style="width: 398px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-scaled.jpg"><img loading="lazy" decoding="async" class=" wp-image-2821" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-300x225.jpg" alt="" width="398" height="299" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-300x225.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-1024x768.jpg 1024w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-768x576.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-1536x1152.jpg 1536w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-Kingdom-of-Love-2048x1536.jpg 2048w" sizes="(max-width: 398px) 100vw, 398px" /></a>
				<figcaption class="wp-caption-text"><a href="https://www.metmuseum.org/art/collection/search/729610">Map of the Kingdom of Love (<em>Das Reich der Liebe</em>)</a>, 1777, Breitkopf &amp; Härtel, The Metropolitan Museum of Art.</figcaption>
			</figure></p>
<p><strong>Digital Commonwealth Images from the 19<sup>th</sup> Century</strong></p>
<p><figure id="attachment_2822" class="wp-caption thumbnail aligncenter" style="width: 523px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Hymenial-Expositor.jpg"><img loading="lazy" decoding="async" class=" wp-image-2822" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Hymenial-Expositor-300x252.jpg" alt="" width="523" height="439" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Hymenial-Expositor-300x252.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Hymenial-Expositor-768x645.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Hymenial-Expositor.jpg 953w" sizes="(max-width: 523px) 100vw, 523px" /></a>
				<figcaption class="wp-caption-text">Augustus Kollner: M.H. Traubel, <a href="https://www.digitalcommonwealth.org/search/commonwealth:q524n427b">“The Hymenial Expositor, or, Matrimonial Chart”</a>, (Philadelphia: 1849), Norman B. Leventhal Map Center, Boston Public Library</figcaption>
			</figure></p>
<p>The “Description” on this pictorial map reads “The Great Ocean of Love represents a period of life that all persons are supposed at some time or another to pass. By an examination of the Chart, the voyageurs will be enabled to avoid the dangers that beset them, and arrive safely at the haven of felicity. . . ” Lovers are encouraged to avoid such places as the “Whirlpool of Impetuosity,” the “Shoals of Perplexity”, the “Quick Sands of Inconstancy” and numerous other traps.</p>
<p>Also included in Digital Commonwealth’s collection of material from the Norman B. Leventhal Map Center is a “Map of a Woman’s Heart” by Joseph Husson. This is a manuscript map in ink and watercolor depicting  the characteristics of a woman as geographic features of a heart. “Ideal Isle” is at the center of the map, surrounded by “Affection”, “Generosity”, and “Gayety”, but also, “Vanity”, “Avarice”, and “Hatred.”This map might be telling us more about the man who made it than about the woman’s heart.</p>
<p><figure id="attachment_2823" class="wp-caption thumbnail aligncenter" style="width: 372px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-a-Womans-Heart.jpg"><img loading="lazy" decoding="async" class=" wp-image-2823" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-a-Womans-Heart-234x300.jpg" alt="" width="372" height="477" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-a-Womans-Heart-234x300.jpg 234w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Map-of-a-Womans-Heart.jpg 623w" sizes="(max-width: 372px) 100vw, 372px" /></a>
				<figcaption class="wp-caption-text">Joseph Husson,<a href="https://www.digitalcommonwealth.org/search/commonwealth:cj82kr20j"> “Map of a Woman’s Heart</a>”, (1840-1860), Norman B. Leventhal Map Center, Boston Public Library.</figcaption>
			</figure></p>
<p>It may be that Husson got the idea for his sketch from seeing D.W. Kellogg’s “<em>Map of the Open Country of a Woman’s Heart,” </em>published prior to the middle of the nineteenth century. One of Digital Commonwealth’s member organizations, the American Antiquarian Society, owns a copy of this print and features it in an online exhibition, “Beauty, Virtue and Vice: Images of Women in Nineteenth Century American Prints”   . The introduction to the exhibition reads like a mission statement for Digital Commonwealth. The prints are “useful to historians who would like to understand how nineteenth –century Americans thought about the world in which they lived. . . When read carefully and conscientiously, prints can be very useful documentary sources for understanding the past.”</p>
<p><figure id="attachment_2825" class="wp-caption thumbnail aligncenter" style="width: 209px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1.jpg"><img loading="lazy" decoding="async" class=" wp-image-2825" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1-207x300.jpg" alt="" width="209" height="302" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1-207x300.jpg 207w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1-706x1024.jpg 706w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1-768x1114.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1-1059x1536.jpg 1059w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Open-Country-of-Womans-Heart-1.jpg 1103w" sizes="(max-width: 209px) 100vw, 209px" /></a>
				<figcaption class="wp-caption-text">D.W. Kellogg &amp; Co, lithographer, <a href="https://catalog.mwa.org/vwebv/holdingsInfo?bibId=150158">A Map of the Open Country of Woman’s Heart</a>, (Hartford, Conn: ca. 1833-1842), American Antiquarian Society</figcaption>
			</figure></p>
<p><strong>Digital Commonwealth Images from the 20<sup>th</sup> Century</strong></p>
<p>Pictorial maps in the twentieth century are less puritanical, less prescriptive. They are more whimsical. The genre evolved into a kind of popular culture art form. Ernest Dudley Chase’s <a href="https://www.digitalcommonwealth.org/search/commonwealth:st74cw28p">“Pictorial Map of Loveland”</a> shown at the beginning of this post is a perfect example. It is a “fictitious map of a heart-shaped place called Loveland [merging] the sentimentality of greeting cards with standard cartographic conventions.” Digital Commonwealth’s collection of the work of Ernest Dudley Chase includes <a href="https://www.digitalcommonwealth.org/search?f%5Bname_facet_ssim%5D%5B%5D=Chase%2C+Ernest+Dudley%2C+1878-">38 pictorial maps</a> from the Norman B. Leventhal Map Center at the Boston Public Library. These maps range from drawings focusing on geographical locations in the Americas or on other continents to topical maps such as <a href="https://ark.digitalcommonwealth.org/ark:/50959/0r96fm30z"> “Stamps of America”</a> or <a href="https://www.digitalcommonwealth.org/search/commonwealth:q524n353r">“The Story Map of Flying: being a chronicle of man’s conquest of the air.”</a></p>
<p>“Born in Lowell, Ernest Dudley Chase (1878-1966) worked for Rust Craft Publishers, which printed greeting cards at its plant in Dedham. . . Chase’s maps were an extension of his work as a graphic artist for Rust Craft and also reflected an international trend toward pictorial mapmaking. These decorative maps, which experienced a resurgence in public popularity after 1913, are a genre in which the cartography is animated with illustrations of buildings, people, and animals. Often including historical references, the maps also frequently depicted airplanes and other modes of transportation. Borrowing from typical Renaissance cartography, Chase and other pictorial mapmakers used embellishments like compass roses, ornate cartouches, and decorative borders.”</p>
<p>Biographical information from the State Library of Massachusetts’s <a href="http://mastatelibrary.blogspot.com/2009/05/ernest-dudley-chase-worldview-in-maps.html">announcement</a> for the 2009 Exhibit “Ernest Dudley Chase: A Worldview in Maps.”</p>
<p><strong>Digital Commonwealth’s Pictorial Maps</strong></p>
<p><a href="https://www.digitalcommonwealth.org/search?f%5Bcollection_name_ssim%5D%5B%5D=Norman+B.+Leventhal+Map+Center+Collection&amp;f%5Binstitution_name_ssi%5D%5B%5D=Boston+Public+Library&amp;f%5Bsubject_facet_ssim%5D%5B%5D=Pictorial+maps&amp;per_page=100">Other pictorial maps</a> in the Norman B. Leventhal Map Center’s collection are available online from Digital Commonwealth. Happy Valentine’s Day!</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Murder and Mayhem in Massachusetts, February 2, 1934</title>
		<link>https://blog.digitalcommonwealth.org/?p=2781</link>
		
		<dc:creator><![CDATA[Outreach Committee]]></dc:creator>
		<pubDate>Fri, 04 Feb 2022 15:50:26 +0000</pubDate>
				<category><![CDATA[A Closer Look]]></category>
		<category><![CDATA[BPL]]></category>
		<guid isPermaLink="false">https://blog.digitalcommonwealth.org/?p=2781</guid>

					<description><![CDATA[Leslie Jones Collection “The Leslie Jones Collection is one of the crown jewels of Digital Commonwealth and the Boston Public Library. Jones was a press photographer who worked for the Boston Herald-Traveler from 1917-1956. During his career, he saved many of his negatives, and by the time he died in 1967, he had kept a collection of nearly 40,000 negatives.&#8230; <a href="https://blog.digitalcommonwealth.org/?p=2781">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p><figure id="attachment_2782" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder1.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2782" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder1-300x238.jpg" alt="13 Minutes After Guilty Verdict" width="300" height="238" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder1-300x238.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder1.jpg 628w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://ark.digitalcommonwealth.org/ark:/50959/b8515r02h">&#8220;13 Minutes After Guilty Verdict”</a>, 1934<br />Leslie Jones Collection, Boston Public Library</figcaption>
			</figure></p>
<p><strong>Leslie Jones Collection</strong></p>
<p>“<a href="https://www.digitalcommonwealth.org/collections/commonwealth:2j62s484w">The Leslie Jones Collection </a>is one of the crown jewels of Digital Commonwealth and the Boston Public Library. Jones was a press photographer who worked for the <em>Boston Herald-Traveler</em> from 1917-1956. During his career, he saved many of his negatives, and by the time he died in 1967, he had kept a collection of nearly 40,000 negatives. The negatives covered decades of his work, including major and minor events in and around the city of Boston.”</p>
<p>From the Boston Public Library’s blog post “Featured Collection: Leslie Jones Collection”, July 13, 2018.</p>
<p>The collection is organized into various series, including a Crime/Police series that includes <a href="https://www.digitalcommonwealth.org/search?f%5Brelated_item_host_ssim%5D%5B%5D=Leslie+Jones+Collection&amp;f%5Brelated_item_series_ssi%5D%5B%5D=Crime%2FPolice%3A+Millen-Faber+%5BMurder+Case%5D">324 photos</a> of the notorious Millen-Faber murder case. In 1934, Murton and Irvine Millen and Abraham Faber went on a crime spree which included robbing the Needham Trust Company and murdering two Needham police officers.  They were the first to use a machine gun in a bank robbery in Massachusetts. The police acted quickly, and within 18 months of their crimes, the brothers Milen and Faber were tried, convicted and executed. The murder case drew national attention, and Leslie Jones was there to photograph it all.</p>
<p><strong>Crime/Police: Millen-Faber [Murder Case] from the Leslie Jones Collection with Commentary</strong></p>
<p>“While Pretty Boy Floyd, John Dillinger and Bonnie and Clyde terrorized America, Murt and Irv Millen, along with MIT-educated Abe Faber, did their best to contribute to the mayhem by shooting up Massachusetts. Their criminality reached its crescendo shortly after Murt married the Rev. Brighton’s very beautiful teenage daughter, Norma. By the time they were caught in 1934, movie theaters and banks had been robbed and people killed in Fitchburg, Lynn and Needham.”</p>
<p>From a <a href="https://www.rmarckantrowitz.com/uploads/5/8/4/9/5849679/the_jewish_murderer_who_married_the_minister%E2%80%99s_daughter.pdf">synopsis of the case</a> by Former Massachusetts Appeals Court Judge R. Marc Kantrowitz, based on his reading of the book <a href="https://www.nathangorenstein.com/tommygunwinter/"><em>Tommy </em><em>Gun Winter</em></a> (2015) by Nathan Gorenstein. Gorenstein is a Massachusetts native, a veteran journalist, and a distant relative of the Millen brothers.</p>
<p>“In February 2, 1934, at about half past nine o&#8217;clock in the forenoon, the three defendants [Murton Millen, Irvine Millen, and Abraham Faber] came to the trust company in a Packard automobile operated by the defendant Murton Millen. Each defendant was armed and one of them wore a mask. They went into the trust company.</p>
<p><figure id="attachment_2783" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder-2.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2783" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder-2-300x238.jpg" alt="" width="300" height="238" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder-2-300x238.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder-2-768x610.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/01/Millen-Faber-Murder-2.jpg 1008w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://ark.digitalcommonwealth.org/ark:/50959/b8515s269">“Needham Bank Murder and Robbery”</a>, 1934<br />Leslie Jones Collection, Boston Public Library</figcaption>
			</figure></p>
<p>The defendant Faber carried a shot gun which he fired wounding one Bartholomew, who was employed by the company as a guard. The defendant Irving Millen fired an automatic pistol while taking money from the cashier&#8217;s cage. The defendants took from the trust company about $15,000. An employee of the trust company caused an alarm bell outside the building to ring, and Officer McLeod, who was on duty near the building and heard the alarm, hastened toward the bank. Murton Millen, armed with a machine gun, fired through a window and shot McLeod, three bullets striking him and causing his death within a few hours. The defendants then entered the automobile, which was operated by Murton Millen, and drove away, compelling Arnold Mackintosh, the treasurer of the bank, and John D. Riordan, the teller, to go with them, standing on the running board. After going a short distance Riordan jumped off, and when he did so was fired upon by the defendants.</p>
<p>As a result of a telephone call one Salamone, a lieutenant of the fire department, was talking with Officer Haddock, and the Packard automobile operated by Murton Millen, in which the two other defendants were riding, came down the highway in front of the Needham fire station going in the direction of Boston; when in the vicinity of the fire station the machine gun was fired by Murton Millen, two of the bullets striking Haddock and killing him, and other bullets striking one Coughlin, a member of the Needham fire department, who was standing nearby. The defendants continued on for several hundred yards beyond the fire station when the automobile slowed down and Mackintosh Jumped from the running board. On February 7, 1934, this Packard automobile was found in the town of Norwood. It had been partly burned and the number plates had been removed, and there was other evidence that an attempt had been made to destroy its identity.</p>
<p><figure id="attachment_2785" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-3.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2785" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-3-300x239.jpg" alt="" width="300" height="239" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-3-300x239.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-3-768x611.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-3.jpg 1005w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://ark.digitalcommonwealth.org/ark:/50959/37720d002">“Auto and inside garage used by Millen brothers and Faber after Needham bank murder</a>”, 1934<br />Leslie Jones Collection, Boston Public Library</figcaption>
			</figure></p>
<p>&nbsp;</p>
<p><figure id="attachment_2792" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faben-Case-5.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2792" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faben-Case-5-300x237.jpg" alt="" width="300" height="237" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faben-Case-5-300x237.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faben-Case-5-768x607.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faben-Case-5.jpg 1013w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://ark.digitalcommonwealth.org/ark:/50959/b8515n88g">“Millen/Faber Case”</a>, 1934<br />Leslie Jones Collection, Boston Public Library</figcaption>
			</figure></p>
<p>The storage battery showed that it bad been recently repaired. There was evidence introduced at the trial that the defendants Millen previously had possession of this battery and that they had taken it to a certain shop to be repaired. As a result of this information the police learned that Murton Millen was living in Boston.”</p>
<p>From a synopsis of the crime in <a href="http://masscases.com/cases/sjc/289/289mass441.html">Commonwealth vs. Murton Millen &amp; Others, 289 Mass. 441 (1934-1935)</a>, a judgment in an unsuccessful appeal to the Massachusetts Supreme Judicial Court of the Millen and Faber trial held in Norfolk County.</p>
<p>“[The Millen/Faber] trial lasted longer than any other murder-one in the history of the commonwealth. During the proceedings, the notorious Bonnie and Clyde were shot dead in Louisiana. The Boston press reported it below the ongoing Millen-Faber proceedings. After 37 days, the all-male sequestered jurors, who had been allowed to shower once a week, got the case. It took them six hours to render a verdict. Guilty. The sentence: death. While awaiting their fate, Murt and Irv, with help from the outside, tried a daring escape that failed. On June 7, 1935, the brothers and Abe sat in the electric chair. It marked the first time two brothers were put to death on the same evening.”</p>
<p>From a <a href="https://www.rmarckantrowitz.com/uploads/5/8/4/9/5849679/the_jewish_murderer_who_married_the_minister%E2%80%99s_daughter.pdf">synopsis of the case</a> by Former Massachusetts Appeals Court Judge R. Marc Kantrowitz, based on the book <a href="https://www.nathangorenstein.com/tommygunwinter/"><em>Tommy Gun Wint</em><em>er</em></a> (2015) by Nathan Gorenstein.</p>
<p><strong>The Gun and Early Attempts at Gun Control</strong></p>
<p>“The [Thompson] machine gun used in the first machine-gun bank robbery and murder in Massachusetts yesterday in Needham is that stolen from the State Police, in the opinion of experts.”</p>
<p>From “Bold Gunmen First to Employ Machine Gun in This State Staging Bank Holdup”, <em>The Boston Daily Globe</em>, Feb. 3, 1934, page 1.</p>
<p><figure id="attachment_2788" class="wp-caption thumbnail aligncenter" style="width: 300px;">
				<a class="" href="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-4.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-2788" src="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-4-300x251.jpg" alt="" width="300" height="251" srcset="https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-4-300x251.jpg 300w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-4-1024x857.jpg 1024w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-4-768x643.jpg 768w, https://blog.digitalcommonwealth.org/wp-content/uploads/2022/02/Millen-Faber-Murder-4.jpg 1030w" sizes="(max-width: 300px) 100vw, 300px" /></a>
				<figcaption class="wp-caption-text"><a href="https://ark.digitalcommonwealth.org/ark:/50959/b8515p90q">“Van Amburg – Ballistics expert with gun used in Needham murders”</a>, 1934<br />Leslie Jones Collection, Boston Public Library</figcaption>
			</figure></p>
<p>“An amendment to the Firearms law which would prohibit the sale of shotguns, rifles and other firearms without a license, was drafted yesterday by Police Commissioner Joseph J. Leonard.  . . The amendment is a direct development of the futile attempt of Edward C. Frye of Dorchester to free the Millen brothers from Dedham Jail Thursday morning. Frye bought a shotgun on Hanover st and later fired it through a Dedham Jail window peppering Irving Millen with pellets. Under the present law a person may buy a shotgun or rifle without being questioned.”</p>
<p>From “Would Tighten Firearms Law”<strong>, </strong><em>The Boston Globe</em>, June 12, 1935, page 20.</p>
<p><strong>Digital Commonwealth provides access to Boston Public Library’s Leslie Jones Collection</strong></p>
<p><a href="https://www.digitalcommonwealth.org/collections/commonwealth:2j62s484w">The Leslie Jones Collection</a> of photographic images from roughly the first half of the twentieth century has been digitized by the Boston Public Library, and made available to the public through Digital Commonwealth’s website. The nearly forty thousand pictures cover a wide variety of subjects. Strengths of the collection include images of baseball and of maritime activities, as well as photographic documentation of criminal trials. We can use a photo-journalist’s eye to reconstruct the story of the Millen brothers and Abe Faber’s crime spree in 1934 and gain a deeper understanding of the events that shaped our history.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>

<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/

Object Caching 156/213 objects using Redis
Page Caching using Redis (Requested URI contains query) 
Lazy Loading (feed)
Minified using Redis
Database Caching using Redis

Served from: blog.digitalcommonwealth.org @ 2024-05-24 12:50:14 by W3 Total Cache
-->
  recorded_at: Fri, 24 May 2024 16:50:14 GMT
recorded_with: VCR 6.2.0
